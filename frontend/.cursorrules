const cursorRules = {
  lang: 'TypeScript',
  'Tech Stack': [
    'Next.js (App router)',
    'Tailwind with Postcss',
    'Apollo Graphql',
    'TypeORM (backend)',
    'Postgres (backend)',
    'Bun package manager',
  ],
  rules: {
    general: [
      "Minimize 'use client' usage: Prefer server components and Next.js SSR features. Use 'use client' only for Web API access in small components. Avoid using 'use client' for data fetching or state management.",
      'Please ask clarifying questions when you are unsure about the requirements.',
    ],
    codeStyle: [
      'Write pure, functional TypeScript code. Avoid classes unless absolutely necessary',
      'Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).',
    ],
    react: [
      'Use functional components and TypeScript interfaces.',
      'Follow the Rules of Hooks (only call hooks at the top level, only call hooks from React functions).',
      'Use React.memo() for component memoization when appropriate.',
      'Implement features using a combination of smart container components that fetch data and dumb presentational components that render them.',
    ],
    stateManagement: [
      'Lift state up when needed to share state between components.',
      'Utilize context for intermediate state sharing when prop drilling becomes cumbersome.',
    ],
    uiStyling: [
      'Use Tailwind for components and styling.',
      'Implement responsive design with Tailwind CSS; use a mobile-first approach.',
    ],
  },
};
